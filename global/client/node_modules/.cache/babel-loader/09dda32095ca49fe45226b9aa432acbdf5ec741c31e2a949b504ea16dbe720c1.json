{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  comments: [],\n  loading: false\n};\nexport const createComment = createAsyncThunk('comment/createComment', async _ref => {\n  let {\n    postId,\n    comment\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.post(`/comments/${postId}`, {\n      postId,\n      comment\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getPostComments = createAsyncThunk('comment/getPostComments', async _ref2 => {\n  let {\n    postId,\n    comment\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.get(`/posts/comments/${postId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [createComment.pending]: state => {\n      state.loading = true;\n    },\n    [createComment.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments.push(action.payload);\n    },\n    [createComment.rejected]: state => {\n      state.loading = false;\n    },\n    ///\n    [getPostComments.pending]: state => {\n      state.loading = true;\n    },\n    [getPostComments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments = action.payload;\n    },\n    [getPostComments.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","comments","loading","createComment","_ref","postId","comment","data","post","error","console","log","getPostComments","_ref2","get","commentSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["C:/Users/Artiem/source/repos/vscode/3 курс/Control Task/client/src/redux/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../../../utils/axios'\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport const createComment = createAsyncThunk(\r\n    'comment/createComment',\r\n    async ({ postId, comment }) => {\r\n        try {\r\n            const { data } = await axios.post(`/comments/${postId}`, {\r\n                postId,\r\n                comment,\r\n            })\r\n            return data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },\r\n)\r\n\r\n\r\nexport const getPostComments = createAsyncThunk(\r\n    'comment/getPostComments',\r\n    async ({ postId, comment }) => {\r\n        try {\r\n            const { data } = await axios.get(`/posts/comments/${postId}`)\r\n            return data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },\r\n)\r\n\r\n\r\nexport const commentSlice = createSlice({\r\n    name: 'comment',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [createComment.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [createComment.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.comments.push(action.payload)\r\n        },\r\n        [createComment.rejected]: (state) => {\r\n            state.loading = false\r\n        },\r\n        \r\n        ///\r\n        [getPostComments.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getPostComments.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.comments = action.payload\r\n        },\r\n        [getPostComments.rejected]: (state) => {\r\n            state.loading = false\r\n        },\r\n    },\r\n})\r\n\r\nexport default commentSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,sBAAsB;AAExC,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE;AACb,CAAC;AAGD,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CACzC,uBAAuB,EACvB,MAAAM,IAAA,IAA+B;EAAA,IAAxB;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACtB,IAAI;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,aAAYH,MAAO,EAAC,EAAE;MACrDA,MAAM;MACNC;IACJ,CAAC,CAAC;IACF,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CACJ,CAAC;AAGD,OAAO,MAAMG,eAAe,GAAGd,gBAAgB,CAC3C,yBAAyB,EACzB,MAAAe,KAAA,IAA+B;EAAA,IAAxB;IAAER,MAAM;IAAEC;EAAQ,CAAC,GAAAO,KAAA;EACtB,IAAI;IACA,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACe,GAAG,CAAE,mBAAkBT,MAAO,EAAC,CAAC;IAC7D,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CACJ,CAAC;AAGD,OAAO,MAAMM,YAAY,GAAGlB,WAAW,CAAC;EACpCmB,IAAI,EAAE,SAAS;EACfhB,YAAY;EACZiB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX,CAACf,aAAa,CAACgB,OAAO,GAAIC,KAAK,IAAK;MAChCA,KAAK,CAAClB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACC,aAAa,CAACkB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACnB,QAAQ,CAACsB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACvC,CAAC;IACD,CAACrB,aAAa,CAACsB,QAAQ,GAAIL,KAAK,IAAK;MACjCA,KAAK,CAAClB,OAAO,GAAG,KAAK;IACzB,CAAC;IAED;IACA,CAACU,eAAe,CAACO,OAAO,GAAIC,KAAK,IAAK;MAClCA,KAAK,CAAClB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACU,eAAe,CAACS,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACnB,QAAQ,GAAGqB,MAAM,CAACE,OAAO;IACnC,CAAC;IACD,CAACZ,eAAe,CAACa,QAAQ,GAAIL,KAAK,IAAK;MACnCA,KAAK,CAAClB,OAAO,GAAG,KAAK;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,eAAea,YAAY,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}