{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice(builder => {\n  builder.name('post').initialState.reducers({}).extraReducers(builder => {\n    builder.addCase(createPost.pending, state => {\n      state.loading = true;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    }).addCase(createPost.rejected, state => {\n      state.loading = false;\n    });\n  });\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","createPost","params","data","post","error","console","log","postSlice","builder","name","reducers","extraReducers","addCase","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["C:/Users/Artiem/source/repos/vscode/3 курс/Control Task/client/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../../../utils/axios'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    popularPosts: [],\r\n    loading: false,\r\n}\r\n\r\nexport const createPost = createAsyncThunk(\r\n    'post/createPost',\r\n    async (params) => {\r\n        try {\r\n            const { data } = await axios.post('/posts', params)\r\n            return data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },\r\n)\r\n\r\nexport const postSlice = createSlice(builder => {\r\n    builder\r\n      .name('post')\r\n      .initialState\r\n      .reducers({})\r\n      .extraReducers(builder => {\r\n        builder\r\n          .addCase(createPost.pending, (state) => {\r\n            state.loading = true;\r\n          })\r\n          .addCase(createPost.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.posts.push(action.payload);\r\n          })\r\n          .addCase(createPost.rejected, (state) => {\r\n            state.loading = false;\r\n          });\r\n      });\r\n  });\r\n\r\nexport default postSlice.reducer\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,sBAAsB;AAExC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACtC,iBAAiB,EACjB,MAAOO,MAAM,IAAK;EACd,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,QAAQ,EAAEF,MAAM,CAAC;IACnD,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CACJ,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGd,WAAW,CAACe,OAAO,IAAI;EAC5CA,OAAO,CACJC,IAAI,CAAC,MAAM,CAAC,CACZb,YAAY,CACZc,QAAQ,CAAC,CAAC,CAAC,CAAC,CACZC,aAAa,CAACH,OAAO,IAAI;IACxBA,OAAO,CACJI,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACf,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDa,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACjB,KAAK,CAACoB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC,CAAC,CACDN,OAAO,CAACZ,UAAU,CAACmB,QAAQ,EAAGL,KAAK,IAAK;MACvCA,KAAK,CAACf,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC;AAEJ,eAAeQ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}